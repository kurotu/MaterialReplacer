name: Build

# Controls when the workflow will run
on:
  push:
# pull_request:

  workflow_dispatch:

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Move files into Assets
        run: |
          mkdir -p Assets/KRT/MaterialReplacer
          mv $(ls . | grep -v Assets) Assets/KRT/MaterialReplacer/

      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-${{ github.ref }}
          restore-keys: |
            Library-build-

      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: StandaloneWindows
          unityVersion: 2019.4.31f1
          buildMethod: KRT.MaterialReplacer.MaterialReplacer.Export
          allowDirtyBuild: true
          versioning: None

      - uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: MaterialReplacer.unitypackage

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2019.4.31f1
    steps:
      - uses: actions/checkout@v2
        with:
          path: Assets/KRT/MaterialReplacer

      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-test-${{ matrix.unityVersion }}-${{ github.ref }}
          restore-keys: |
            Library-test-${{ matrix.unityVersion }}-

      - uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          unityVersion: ${{ matrix.unityVersion }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet tool restore
      - name: Check style
        run: dotnet style check -r stylecop.ruleset . > result.txt
      - name: Report result
        run: if [ "$(wc -l < result.txt)" = "0" ]; then true; else cat result.txt && false; fi

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build, test, lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: artifacts

      - name: Create release artifact
        id: artifact
        run: |
          NAME=MaterialReplacer-${GITHUB_REF#refs/tags/}
          mkdir ${NAME}
          cp MaterialReplacer.unitypackage ${NAME}/${NAME}.unitypackage
          cp LICENSE.txt ${NAME}/
          cp README.md ${NAME}/
          cp README_JP.md ${NAME}/
          zip -r ${NAME}.zip ${NAME}
          echo "::set-output name=artifact-name::${NAME}"

      - uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ steps.artifact.outputs.artifact-name }}.zip
            ${{ steps.artifact.outputs.artifact-name }}/${{ steps.artifact.outputs.artifact-name }}.unitypackage
